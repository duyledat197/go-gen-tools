syntax = "proto3";

package team;
option go_package = "pb/;pb";

import "google/api/annotations.proto";
import "validate/validate.proto";
import "enum.proto";
import "options/annotations.proto";
import "user.proto";

option (transformer.go_repo_package) = "models";
option (transformer.go_protobuf_package) = "pb";
option (transformer.go_models_file_path) = "internal/models/team.go";

service TeamService {
  rpc CreateTeam(CreateTeamRequest) returns (CreateTeamResponse) {
    option (google.api.http) = {
      post : "/v1/teams",
      body : "*"
    };
  };

  rpc AddUsersToTeam(AddUsersToTeamRequest) returns (AddUsersToTeamResponse) {
    option (google.api.http) = {
      post : "/v1/teams/{team_id}",
      body : "*"
    };
  };

  rpc GetTeams(GetTeamsRequest) returns (GetTeamsResponse) {
    option (google.api.http) = {
      get : "/v1/teams"
    };
  };

  rpc GetTeamByID(GetTeamByIDRequest) returns (GetTeamByIDResponse) {
    option (google.api.http) = {
      get : "/v1/teams/{team_id}"
    };
  };

  rpc UpdateTeam(UpdateTeamRequest) returns (UpdateTeamResponse) {
    option (google.api.http) = {
      put : "/v1/teams",
      body : "*"
    };
  };
}

message CreateTeamRequest { Team team = 1; }

message CreateTeamResponse { string team_id = 1; }

message AddUsersToTeamRequest {
  string team_id = 1;
  repeated string user_ids = 2;
}

message AddUsersToTeamResponse { bool success = 1; }

message Team {
  option (transformer.go_struct) = "Team";
  string name = 1;
  string description = 2;
  repeated string user_ids = 3 [ (transformer.map_to) = "UserIDs" ];
  repeated string data_ids = 4 [ (transformer.map_to) = "DataIDs" ];
  string project_id = 5 [ (transformer.map_to) = "ProjectID" ];

  string id = 6;
  string created_at = 7;
}

message GetTeamsRequest {
  int32 offset = 1;
  int32 limit = 2;
}

message GetTeamsResponse {
  repeated Team data = 1;
  int64 total = 2;
}

message GetTeamByIDRequest { string team_id = 1; }

message GetTeamByIDResponse { Team team = 1; }

message UpdateTeamRequest { Team team = 1; }

message UpdateTeamResponse { bool success = 1; }